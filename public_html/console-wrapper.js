$(function() {
  var term = $('#terminal-panel').terminal(function(command, term) {
    if (command == 'help\n') {
      term.echo('Valid binaries: level00, level01, level02, level03, level04');
      return;
    }
    else if (command.length == 1)
      return;
    initConnection(term, command.substr(0, command.length - 1));
  }, {
    clear: false,
    echoCommand: true,
    exit: false,
    greetings: 'Binary Wrapper\nCopyright (c) 2017 theKidOfArcrania\n',
    history: false,
    prompt: '> ',
    pauseEvents: false,
    onBlur: function() {
      return false;
    },
    scrollOnEcho: true,
    
  });
  
  term.echo('Enter binary to run\nOr type in `help` to get a list of valid binaries.');
});

function initConnection(term, program) {
  term.push(function(command) {
    socket.emit('stdin', command);
  }, {
    prompt: '',
    keymap: {
      'CTRL+D': function() {
        socket.emit("end");
      },
      'CTRL+C': function() {
        socket.emit("interrupt");
      }
    }
  });
    
  var socket = io('http://' + window.location.hostname + ':8081');
  socket.on('stdout', (msg) => {
    console.log(msg);
    term.echo(msg);
  });
  socket.on('stderr', (msg) => {
    term.error(msg);
  });
  socket.on('connect', () => {
    socket.emit('start', program);
  });
  socket.on('connect_error', (error) => {
    term.error("Failure to connect to server: " + error);
  });
  socket.on('disconnect', () => {
    term.echo("Connection has been disconnected. Refresh or reconnect to continue.");
    socket.disconnect();
    term.pop();
    term.echo(' \nEnter binary to run\nOr type in `help` to get a list of valid binaries.');
  });
  
}